3.1 

1. Отправка упакованного буферного массива с ребрами поверхностной сетки, 
уместно добавить комментарий, каким именно образом он упакован: 

// Отправляется массив вида (e11, e12, e13, e21, ...)

2. Комментарий, поясняющий, какой алгоритм используется для декомпозиции сетки в 
текущей версии проекта

// Декомпозиция методом отбора по координатам
DecompositionSurfaceMesh(...)

3. Пояснение, почему в методе моментов используется двойной цикл по всем элементам сетки для построения матрицы:

// В электродинамике каждый элемент взаимодействует с каждым - матрица получается плотной

4. Этапы расчета по быстрому методу мультиполей, комментарии для ясности:

// Явное вычисление взаимодействий с близкими элементами
MultSparseMatrixVector()

// Приближенное вычисление взаимодействий с далекими элементами
Aggregation(...)
Transfers(...)
Disaggregation(...)

5. Декомпозиция дерева уровней по процессорам, комментарий поясняет, какой метод используется:

// Используется подход "сверху-вниз", при котором все дочерние группы текущей группы
остаются на этом же процессоре
AssignGroupsToProcessors(...)

6. Комментарий поясняет, почему происходит копирование данных

// Информация о материалах / границах изначально хранится в yaml-файле с параметрами задачи, 
// а в структурах проекта она хранится вместе с сеткой, поэтому копируем
mesh.boundary = taskParam.boundary

7. Разделение параметров задачи на блоки

// Параметры источника
frequency, amplitude = ...

// Параметры облучения
theta_angle, phi_angle = ...

3.2

1. 
// Проверка, принадлежат ли смежные ячейки каждого ребра текущему процессору
for(int i = 0; i < SURFACE_CELL_SIZE; i++) {
    nCell1 = 
    nCell2 = 
    // some realization of check
}

Вынес код в отдельную функцию получилось следующее:
if (isCellNotBelongsToProcess(numberOfProcess, numberOfCell)) {
    AddCellToProcess(numberOfProcess, numberOfCell);
}

2. Пример кода:

// global number of local edge with index 'indexOfEdge'
nEdge = geomArea.globalNumsEdges[indexOfEdge]

Изменил название переменной - комментарий стал не нужен:
globalNumEdge = geomArea.globalNumsEdges[indexOfEdge]

3. При обменах между процессорами сначала упаковываем, потом распаковываем буферные массивы:

// pack buffers
for i ...
    for j ...

// do exchanges

// unpack buffers
for i ...
    for j ...

Переработал код:

PackBuffer(bufferArray);
// do exchanges
UnpackBuffer(bufferArray);

4. Разбиение исходной сетки на набор групп:

// split bounding box and create groups
for (int i = 0; i < surfaceMesh.edgeCount; i++)
    // some realization

После исправления стало:

SurfaceMeshClustering(surfaceMesh);

5. Пример кода:

// i - index of edge in CellEdges
for(int i = 0; i < SURFACE_CELL_SIZE; i++) {
    // some calculations
}
Комментарий бесполезен - без него понятно, что происходит - удалил.
